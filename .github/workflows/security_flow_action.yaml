name: Security Flow Action

on:
  push:
    branches:
      - main

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Run Snyk to check for vulnerabilities (Python)
        run: |
          docker run --name snykpython --workdir /github/workspace \
            -e "SNYK_TOKEN=${{ secrets.SNYK_TOKEN }}" \
            -e "GITHUB_ACTIONS=true" \
            -e "CI=true" \
            -v "/home/runner/work/security_action/security_action/app:/github/workspace" \
            snyk/snyk:python  snyk test --sarif-file-output=snyk-python.sarif || true

      - name: Get snyk.sarif
        run: |
          docker cp snykpython:/github/workspace/snyk-python.sarif ./app/snyk-python.sarif

      - name: Upload python result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./app/snyk-python.sarif
          category: python

  build:
    needs: security
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: example_django_app
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag the image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          # Build a docker container and push it to ECR 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

      - name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        with:
          image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          args: --file=Dockerfile

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
          category: docker

  image_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Run Snyk to check Docker image for vulnerabilities
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: "${{ secrets.ECR_REPOSITORY_URI}}/${{ secrets.ECR_REPOSITORY_NAME}}:latest"
        args: --file=Dockerfile

    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif
        category: docker
        
  deploy:
    needs: image_scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
